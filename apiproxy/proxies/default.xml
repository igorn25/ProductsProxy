<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <DefaultFaultRule name="DefaultFaultRule">
        <Step>
            <Name>AM-set-client-response-log-variables</Name>
        </Step>
        <Step>
            <Name>JS-calculate-latencies</Name>
        </Step>
        <AlwaysEnforce>true</AlwaysEnforce>
    </DefaultFaultRule>
    <FaultRules>
        <FaultRule name="InvalidApiKeyRule">
            <Step>
                <Name>Assign-Message-Invalid-API-Key</Name>
            </Step>
            <Condition>(fault.name = "FailedToResolveAPIKey")</Condition>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>FC-RequestValidation</Name>
            </Step>
            <Step>
                <Name>KV-get-log-parameters</Name>
            </Step>
            <Step>
                <Name>AM-set-client-request-log-variables</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="Get All Products">
            <Description>Get All Product Details</Description>
            <Request>
                <Step>
                    <Name>RC-PRODUCTS</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>RC-PRODUCTS</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/products") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Get Product">
            <Description>Product Detail</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/products/*") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Create New Product">
            <Description>Create new product</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/products") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Update Product">
            <Description>Update Product</Description>
            <Request>
                <Step>
                    <Name>Lookup-Cache</Name>
                </Step>
                <Step>
                    <Condition>lookupcache.Lookup-cache.cachehit = false</Condition>
                    <Name>KVM-Get-Org-Credentials</Name>
                </Step>
                <Step>
                    <Condition>lookupcache.Lookup-cache.cachehit = false</Condition>
                    <Name>Basic-Authentication</Name>
                </Step>
                <Step>
                    <Condition>lookupcache.Lookup-cache.cachehit = false</Condition>
                    <Name>Populate-Cache</Name>
                </Step>
                <Step>
                    <Name>RegexProtection</Name>
                </Step>
                <Step>
                    <Name>JSON-Threat-Protection</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/products/*") and (request.verb = "PUT")</Condition>
        </Flow>
        <Flow name="Get Product Availability">
            <Description>Product Availability</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/products/*/availability") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="OptionsPreFlight">
            <Description>Adding CORS Support</Description>
            <Request/>
            <Response>
                <Step>
                    <Name>Add-CORS</Name>
                </Step>
            </Response>
            <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request>
            <Step>
                <Name>AM-set-target-request-log-variables</Name>
            </Step>
        </Request>
        <Response>
            <Step>
                <Name>AM-set-client-response-log-variables</Name>
            </Step>
            <Step>
                <Name>JS-calculate-latencies</Name>
            </Step>
        </Response>
    </PostFlow>
    <PostClientFlow>
        <Response>
            <Step>
                <Name>ML-log-to-loggly</Name>
            </Step>
        </Response>
    </PostClientFlow>
    <HTTPProxyConnection>
        <BasePath>/v1</BasePath>
        <VirtualHost>secure</VirtualHost>
        <VirtualHost>default</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="NoRoute">
        <Condition>request.verb == "OPTIONS" AND request.header.origin != null
            AND request.header.Access-Control-Request-Method != null</Condition>
    </RouteRule>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>